<mxfile host="app.diagrams.net" modified="2022-03-17T08:15:45.491Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.51 Safari/537.36" etag="QVTr-FamxMfMF8ah0ioN" version="17.1.2" type="github">
  <diagram id="C5RBs43oDa-KdzZeNtuy" name="Page-1">
    <mxGraphModel dx="2589" dy="4342" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" background="#F4F1DE" math="0" shadow="0">
      <root>
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-0" />
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-1" parent="WIyWlLk6GJQsqaUBKTNV-0" />
        <mxCell id="KjH-scwqGW-Tt5N11Xai-14" value="" style="rounded=1;whiteSpace=wrap;html=1;sketch=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=none;strokeWidth=13;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="24" y="-49" width="2256" height="888" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-15" value="" style="rounded=1;whiteSpace=wrap;html=1;sketch=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=none;strokeWidth=13;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-33" y="914" width="1826" height="2678" as="geometry" />
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--30" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;jumpStyle=none;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.579;entryY=1.001;entryDx=0;entryDy=0;entryPerimeter=0;fontColor=#393C56;endArrow=classic;endFill=1;sourcePerimeterSpacing=15;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="zkfFHV4jXpPFQw0GAbJ--0" target="Uscz21SQ1si1RZ5pgYw--4" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="275" y="741" />
              <mxPoint x="316" y="741" />
              <mxPoint x="316" y="771" />
              <mxPoint x="1059" y="771" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-4" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.25;exitY=1;exitDx=0;exitDy=0;labelBackgroundColor=#F4F1DE;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="zkfFHV4jXpPFQw0GAbJ--0" target="KjH-scwqGW-Tt5N11Xai-0" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-8" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.75;exitY=1;exitDx=0;exitDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="zkfFHV4jXpPFQw0GAbJ--0" target="KjH-scwqGW-Tt5N11Xai-5" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="383" y="818" />
              <mxPoint x="947" y="818" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-29" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=1;exitDx=0;exitDy=0;fontColor=#393C56;strokeColor=#E07A5F;strokeWidth=1;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="zkfFHV4jXpPFQw0GAbJ--0" target="KjH-scwqGW-Tt5N11Xai-23" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="586" y="550" />
              <mxPoint x="586" y="1844" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="zkfFHV4jXpPFQw0GAbJ--0" value="class EventLoop" style="swimlane;fontStyle=2;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="60" width="426" height="811" as="geometry">
            <mxRectangle x="230" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="zkfFHV4jXpPFQw0GAbJ--1" value="  private:&#xa;    // 声明顺序 wakeupFd_ &gt; pwakeupChannel_&#xa;    bool                 looping_;&#xa;    shared_ptr&lt;Epoll&gt;    poller_;&#xa;    int                  wakeupFd_;&#xa;    bool                 quit_;&#xa;    bool                 eventHandling_;&#xa;    mutable MutexLock    mutex_;&#xa;    std::vector&lt;Functor&gt; pendingFunctors_;&#xa;    bool                 callingPendingFunctors_;&#xa;    const pid_t          threadId_;&#xa;    shared_ptr&lt;Channel&gt;  pwakeupChannel_;&#xa;    void wakeup();&#xa;    void handleRead();&#xa;    void doPendingFunctors();&#xa;    void handleConn();" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=none;" parent="zkfFHV4jXpPFQw0GAbJ--0" vertex="1">
          <mxGeometry y="26" width="426" height="237" as="geometry" />
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--31" value="EventLoop::EventLoop()&#xa;    : looping_(false), poller_(new Epoll()), wakeupFd_(createEventfd()),&#xa;      quit_(false), eventHandling_(false), callingPendingFunctors_(false),&#xa;      threadId_(CurrentThread::tid()),&#xa;      pwakeupChannel_(new Channel(this, wakeupFd_))&#xa;{&#xa;    if (t_loopInThisThread) {&#xa;        // LOG &lt;&lt; &quot;Another EventLoop &quot; &lt;&lt; t_loopInThisThread &lt;&lt; &quot; exists in this&#xa;        // thread &quot; &lt;&lt; threadId_;&#xa;    }&#xa;    else {&#xa;        t_loopInThisThread = this;&#xa;    }&#xa;    // pwakeupChannel_-&gt;setEvents(EPOLLIN | EPOLLET | EPOLLONESHOT);&#xa;    pwakeupChannel_-&gt;setEvents(EPOLLIN | EPOLLET);&#xa;    pwakeupChannel_-&gt;setReadHandler(bind(&amp;EventLoop::handleRead, this));&#xa;    pwakeupChannel_-&gt;setConnHandler(bind(&amp;EventLoop::handleConn, this));&#xa;    poller_-&gt;epoll_add(pwakeupChannel_, 0);&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="zkfFHV4jXpPFQw0GAbJ--0" vertex="1">
          <mxGeometry y="263" width="426" height="274" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-55" value="int createEventfd()&#xa;{&#xa;    int evtfd = eventfd(0, EFD_NONBLOCK | EFD_CLOEXEC);&#xa;    //创建eventfd，设置非阻塞 | 子进程会关闭这个fd&#xa;    if (evtfd &lt; 0) {&#xa;        LOG &lt;&lt; &quot;Failed in eventfd&quot;;&#xa;        abort();&#xa;    }&#xa;    return evtfd;&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="zkfFHV4jXpPFQw0GAbJ--0" vertex="1">
          <mxGeometry y="537" width="426" height="155" as="geometry" />
        </mxCell>
        <mxCell id="zkfFHV4jXpPFQw0GAbJ--17" value="class Epoll" style="swimlane;fontStyle=0;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="883" y="20" width="476" height="246" as="geometry">
            <mxRectangle x="550" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="zkfFHV4jXpPFQw0GAbJ--25" value="  private:&#xa;    static const int          MAXFDS = 100000;&#xa;    int                       epollFd_;&#xa;    std::vector&lt;epoll_event&gt;  events_;&#xa;    std::shared_ptr&lt;Channel&gt;  fd2chan_[MAXFDS];&#xa;    std::shared_ptr&lt;HttpData&gt; fd2http_[MAXFDS];&#xa;    TimerManager              timerManager_;" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;" parent="zkfFHV4jXpPFQw0GAbJ--17" vertex="1">
          <mxGeometry y="26" width="476" height="110" as="geometry" />
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--32" value="Epoll::Epoll() : epollFd_(epoll_create1(EPOLL_CLOEXEC)), events_(EVENTSNUM)&#xa;{&#xa;    assert(epollFd_ &gt; 0);&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="zkfFHV4jXpPFQw0GAbJ--17" vertex="1">
          <mxGeometry y="136" width="476" height="110" as="geometry" />
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--2" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="zkfFHV4jXpPFQw0GAbJ--25" target="zkfFHV4jXpPFQw0GAbJ--1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--9" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="Uscz21SQ1si1RZ5pgYw--3" target="zkfFHV4jXpPFQw0GAbJ--17" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--3" value="class Channel" style="swimlane;fontStyle=0;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="991.5" y="424" width="293" height="538" as="geometry">
            <mxRectangle x="550" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--4" value="  private:&#xa;    typedef std::function&lt;void()&gt; CallBack;&#xa;    EventLoop* loop_;&#xa;    int        fd_;&#xa;    __uint32_t events_;&#xa;    __uint32_t revents_;&#xa;    __uint32_t lastEvents_;&#xa;    // 方便找到上层持有该Channel的对象&#xa;    std::weak_ptr&lt;HttpData&gt; holder_;&#xa;  private:&#xa;    int parse_URI();&#xa;    int parse_Headers();&#xa;    int analysisRequest();&#xa;    CallBack readHandler_;&#xa;    CallBack writeHandler_;&#xa;    CallBack errorHandler_;&#xa;    CallBack connHandler_;" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;" parent="Uscz21SQ1si1RZ5pgYw--3" vertex="1">
          <mxGeometry y="26" width="293" height="256" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-75" value="Channel::Channel(EventLoop* loop, int fd)&#xa;    : loop_(loop), fd_(fd), events_(0), lastEvents_(0)&#xa;{&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;" parent="Uscz21SQ1si1RZ5pgYw--3" vertex="1">
          <mxGeometry y="282" width="293" height="83" as="geometry" />
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--5" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="Uscz21SQ1si1RZ5pgYw--4" target="zkfFHV4jXpPFQw0GAbJ--1" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="874" y="620" />
              <mxPoint x="874" y="145" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-35" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;strokeWidth=1;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="Uscz21SQ1si1RZ5pgYw--6" target="KjH-scwqGW-Tt5N11Xai-23" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="700" y="1177" />
              <mxPoint x="635" y="1177" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--6" value="class MutexLock : noncopyable" style="swimlane;fontStyle=0;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="566" y="447" width="261" height="116" as="geometry">
            <mxRectangle x="550" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--7" value=" private:&#xa;  pthread_mutex_t mutex;&#xa;  // 友元类不受访问权限影响&#xa; private:&#xa;  friend class Condition;" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;" parent="Uscz21SQ1si1RZ5pgYw--6" vertex="1">
          <mxGeometry y="26" width="261" height="86" as="geometry" />
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--8" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="Uscz21SQ1si1RZ5pgYw--7" target="zkfFHV4jXpPFQw0GAbJ--1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--10" value="class HttpData : public std::enable_shared_from_this&lt;HttpData&gt;" style="swimlane;fontStyle=0;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1641" y="26" width="497" height="654" as="geometry">
            <mxRectangle x="550" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--11" value="  private:&#xa;    EventLoop*               loop_;&#xa;    std::shared_ptr&lt;Channel&gt; channel_;&#xa;    int                      fd_;&#xa;    std::string              inBuffer_;&#xa;    std::string              outBuffer_;&#xa;    bool                     error_;&#xa;    ConnectionState          connectionState_;&#xa;    HttpMethod                         method_;&#xa;    HttpVersion                        HTTPVersion_;&#xa;    std::string                        fileName_;&#xa;    std::string                        path_;&#xa;    int                                nowReadPos_;&#xa;    ProcessState                       state_;&#xa;    ParseState                         hState_;&#xa;    bool                               keepAlive_;&#xa;    std::map&lt;std::string, std::string&gt; headers_;&#xa;    std::weak_ptr&lt;TimerNode&gt;           timer_;&#xa;    void          handleRead();&#xa;    void          handleWrite();&#xa;    void          handleConn();&#xa;    void          handleError(int fd, int err_num, std::string short_msg);&#xa;    URIState      parseURI();&#xa;    HeaderState   parseHeaders();&#xa;    AnalysisState analysisRequest();" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;" parent="Uscz21SQ1si1RZ5pgYw--10" vertex="1">
          <mxGeometry y="26" width="497" height="366" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-54" value="HttpData::HttpData(EventLoop *loop, int connfd)&#xa;    : loop_(loop),&#xa;      channel_(new Channel(loop, connfd)),&#xa;      fd_(connfd),&#xa;      error_(false),&#xa;      connectionState_(H_CONNECTED),&#xa;      method_(METHOD_GET),&#xa;      HTTPVersion_(HTTP_11),&#xa;      nowReadPos_(0),&#xa;      state_(STATE_PARSE_URI),&#xa;      hState_(H_START),&#xa;      keepAlive_(false) {&#xa;  // loop_-&gt;queueInLoop(bind(&amp;HttpData::setHandlers, this));&#xa;  channel_-&gt;setReadHandler(bind(&amp;HttpData::handleRead, this));&#xa;  channel_-&gt;setWriteHandler(bind(&amp;HttpData::handleWrite, this));&#xa;  channel_-&gt;setConnHandler(bind(&amp;HttpData::handleConn, this));&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="Uscz21SQ1si1RZ5pgYw--10" vertex="1">
          <mxGeometry y="392" width="497" height="261" as="geometry" />
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--12" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="Uscz21SQ1si1RZ5pgYw--11" target="zkfFHV4jXpPFQw0GAbJ--25" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--13" value="class TimerManager" style="swimlane;fontStyle=0;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="2406" y="182" width="433" height="107" as="geometry">
            <mxRectangle x="550" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--14" value="  private:&#xa;    typedef std::shared_ptr&lt;TimerNode&gt; SPTimerNode;&#xa;    std::priority_queue&lt;SPTimerNode, std::deque&lt;SPTimerNode&gt;, TimerCmp&gt;&#xa;        timerNodeQueue;" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;" parent="Uscz21SQ1si1RZ5pgYw--13" vertex="1">
          <mxGeometry y="26" width="433" height="79" as="geometry" />
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--15" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="Uscz21SQ1si1RZ5pgYw--14" target="zkfFHV4jXpPFQw0GAbJ--25" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2356" y="247" />
              <mxPoint x="2356" y="-7" />
              <mxPoint x="1121" y="-7" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-56" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="Uscz21SQ1si1RZ5pgYw--16" target="Uscz21SQ1si1RZ5pgYw--13" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--16" value="class TimerNode" style="swimlane;fontStyle=0;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="2484" y="350" width="277" height="107.5" as="geometry">
            <mxRectangle x="550" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--17" value="private:&#xa;    bool                      deleted_;&#xa;    size_t                    expiredTime_;&#xa;    std::shared_ptr&lt;HttpData&gt; SPHttpData;" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;" parent="Uscz21SQ1si1RZ5pgYw--16" vertex="1">
          <mxGeometry y="26" width="277" height="79" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-59" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="Uscz21SQ1si1RZ5pgYw--21" target="Uscz21SQ1si1RZ5pgYw--16" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--21" value="struct TimerCmp" style="swimlane;fontStyle=0;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="2461" y="529" width="323" height="145" as="geometry">
            <mxRectangle x="550" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--22" value="{&#xa;    bool operator()(std::shared_ptr&lt;TimerNode&gt;&amp; a,&#xa;                    std::shared_ptr&lt;TimerNode&gt;&amp; b) const&#xa;    {&#xa;        return a-&gt;getExpTime() &gt; b-&gt;getExpTime();&#xa;    }&#xa;};" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;" parent="Uscz21SQ1si1RZ5pgYw--21" vertex="1">
          <mxGeometry y="26" width="323" height="119" as="geometry" />
        </mxCell>
        <mxCell id="Uscz21SQ1si1RZ5pgYw--27" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;jumpStyle=none;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;fontColor=#393C56;endArrow=classic;endFill=1;sourcePerimeterSpacing=15;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="Uscz21SQ1si1RZ5pgYw--4" target="Uscz21SQ1si1RZ5pgYw--11" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-0" value="class Server" style="swimlane;fontStyle=2;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="41" y="931" width="455" height="745" as="geometry">
            <mxRectangle x="230" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-1" value="  private:&#xa;    EventLoop* loop_;       //事件环&#xa;    int        threadNum_;  //线程数&#xa;    int        port_;       //端口号&#xa;    std::unique_ptr&lt;EventLoopThreadPool&gt; eventLoopThreadPool_;&#xa;    bool                                 started_;&#xa;    std::shared_ptr&lt;Channel&gt;             acceptChannel_;&#xa;    int                                  listenFd_;&#xa;    static const int                     MAXFDS = 100000;" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=none;" parent="KjH-scwqGW-Tt5N11Xai-0" vertex="1">
          <mxGeometry y="26" width="455" height="145" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-2" value="Server::Server(EventLoop* loop, int threadNum, int port)&#xa;    : loop_(loop), threadNum_(threadNum), port_(port),&#xa;      eventLoopThreadPool_(new EventLoopThreadPool(loop_, threadNum)),&#xa;      started_(false), acceptChannel_(new Channel(loop_)),&#xa;      listenFd_(socket_bind_listen(port_))&#xa;{&#xa;    acceptChannel_-&gt;setFd(listenFd_);  //莫名其妙为啥不放到构造函数一起操作呢？&#xa;    handle_for_sigpipe();&#xa;    if (setSocketNonBlocking(listenFd_) &lt; 0) {&#xa;        perror(&quot;set socket non block failed&quot;);&#xa;        abort();&#xa;    }&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-0" vertex="1">
          <mxGeometry y="171" width="455" height="287" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-17" value="void Server::start()&#xa;{&#xa;    eventLoopThreadPool_-&gt;start();&#xa;    // acceptChannel_-&gt;setEvents(EPOLLIN | EPOLLET | EPOLLONESHOT);&#xa;    acceptChannel_-&gt;setEvents(EPOLLIN | EPOLLET);&#xa;    acceptChannel_-&gt;setReadHandler(bind(&amp;Server::handNewConn, this));&#xa;    acceptChannel_-&gt;setConnHandler(bind(&amp;Server::handThisConn, this));&#xa;    loop_-&gt;addToPoller(acceptChannel_, 0);&#xa;    started_ = true;&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-0" vertex="1">
          <mxGeometry y="458" width="455" height="201" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-5" value="class EventLoopThreadPool : noncopyable" style="swimlane;fontStyle=2;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="699" y="939" width="483" height="465" as="geometry">
            <mxRectangle x="230" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-6" value="  private:&#xa;    EventLoop*                                    baseLoop_;&#xa;    bool                                          started_;&#xa;    int                                           numThreads_;&#xa;    int                                           next_;&#xa;    std::vector&lt;std::shared_ptr&lt;EventLoopThread&gt;&gt; threads_;&#xa;    std::vector&lt;EventLoop*&gt;                       loops_;" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=none;" parent="KjH-scwqGW-Tt5N11Xai-5" vertex="1">
          <mxGeometry y="26" width="483" height="145" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-7" value="EventLoopThreadPool::EventLoopThreadPool(EventLoop* baseLoop, int numThreads)&#xa;    : baseLoop_(baseLoop), started_(false), numThreads_(numThreads), next_(0)&#xa;{&#xa;    if (numThreads_ &lt;= 0) {&#xa;        LOG &lt;&lt; &quot;numThreads_ &lt;= 0&quot;;&#xa;        abort();  //中止程序执行，直接从调用的地方跳出。&#xa;    }&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-5" vertex="1">
          <mxGeometry y="171" width="483" height="136" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-18" value="void EventLoopThreadPool::start()&#xa;{&#xa;    baseLoop_-&gt;assertInLoopThread();&#xa;    started_ = true;&#xa;    for (int i = 0; i &lt; numThreads_; ++i) {&#xa;        std::shared_ptr&lt;EventLoopThread&gt; t(new EventLoopThread());&#xa;        threads_.push_back(t);&#xa;        loops_.push_back(t-&gt;startLoop());&#xa;    }&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-5" vertex="1">
          <mxGeometry y="307" width="483" height="158" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-9" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-6" target="KjH-scwqGW-Tt5N11Xai-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-10" value="Util.cpp" style="swimlane;fontStyle=2;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1191" y="1289" width="510" height="584" as="geometry">
            <mxRectangle x="230" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-11" value="int socket_bind_listen(int port)&#xa;{&#xa;    // 检查port值，取正确区间范围&#xa;    if (port &lt; 0 || port &gt; 65535)&#xa;        return -1;&#xa;    // 创建socket(IPv4 + TCP)，返回监听描述符&#xa;    int listen_fd = 0;&#xa;    if ((listen_fd = socket(AF_INET, SOCK_STREAM, 0)) == -1)&#xa;        return -1;&#xa;    // 消除bind时&quot;Address already in use&quot;错误&#xa;    int optval = 1;&#xa;    if (setsockopt(listen_fd, SOL_SOCKET, SO_REUSEADDR, &amp;optval,&#xa;                   sizeof(optval)) == -1) {&#xa;        close(listen_fd);&#xa;        return -1;&#xa;    }&#xa;    // 设置服务器IP和Port，和监听描述符绑定&#xa;    struct sockaddr_in server_addr;&#xa;    bzero((char*)&amp;server_addr, sizeof(server_addr));&#xa;    server_addr.sin_family      = AF_INET;&#xa;    server_addr.sin_addr.s_addr = htonl(INADDR_ANY);&#xa;    server_addr.sin_port        = htons((unsigned short)port);&#xa;    if (bind(listen_fd, (struct sockaddr*)&amp;server_addr, sizeof(server_addr)) ==&#xa;        -1) {&#xa;        close(listen_fd);&#xa;        return -1;&#xa;    }&#xa;    // 开始监听，最大等待队列长为LISTENQ&#xa;    if (listen(listen_fd, 2048) == -1) {&#xa;        close(listen_fd);&#xa;        return -1;&#xa;    }&#xa;    // 无效监听描述符&#xa;    if (listen_fd == -1) {&#xa;        close(listen_fd);&#xa;        return -1;&#xa;    }&#xa;    return listen_fd;&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=none;" parent="KjH-scwqGW-Tt5N11Xai-10" vertex="1">
          <mxGeometry y="26" width="510" height="558" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-16" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;strokeWidth=10;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-14" target="KjH-scwqGW-Tt5N11Xai-15" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-20" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;strokeWidth=1;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-11" target="KjH-scwqGW-Tt5N11Xai-2" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="625" y="1594" />
              <mxPoint x="625" y="1246" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-21" value="class EventLoopThread : noncopyable" style="swimlane;fontStyle=2;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="635" y="1645" width="494" height="638" as="geometry">
            <mxRectangle x="230" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-22" value="  private:&#xa;    void       threadFunc();&#xa;    EventLoop* loop_;&#xa;    bool       exiting_;&#xa;    Thread     thread_;&#xa;    MutexLock  mutex_;&#xa;    Condition  cond_;" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=none;" parent="KjH-scwqGW-Tt5N11Xai-21" vertex="1">
          <mxGeometry y="26" width="494" height="120" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-23" value="EventLoopThread::EventLoopThread()&#xa;    : loop_(NULL),&#xa;      exiting_(false),&#xa;      thread_(bind(&amp;EventLoopThread::threadFunc, this), &quot;EventLoopThread&quot;),&#xa;      mutex_(),&#xa;      cond_(mutex_) {}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-21" vertex="1">
          <mxGeometry y="146" width="494" height="106" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-46" value="void EventLoopThread::threadFunc()&#xa;{&#xa;    EventLoop loop;&#xa;    {&#xa;        MutexLockGuard lock(mutex_);&#xa;        loop_ = &amp;loop;&#xa;        cond_.notify();&#xa;    }&#xa;    loop.loop();&#xa;    // assert(exiting_);&#xa;    loop_ = NULL;&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-21" vertex="1">
          <mxGeometry y="252" width="494" height="193" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-52" value="EventLoop* EventLoopThread::startLoop()&#xa;{&#xa;    assert(!thread_.started());  // true&#xa;    thread_.start();&#xa;    {&#xa;        MutexLockGuard lock(mutex_);&#xa;        // 一直等到threadFun在Thread里真正跑起来&#xa;        while (loop_ == NULL)&#xa;            cond_.wait();&#xa;    }&#xa;    return loop_;&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-21" vertex="1">
          <mxGeometry y="445" width="494" height="193" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-28" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;strokeWidth=1;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-18" target="KjH-scwqGW-Tt5N11Xai-23" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="545" y="1325" />
              <mxPoint x="545" y="1844" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-34" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;fontColor=#393C56;strokeColor=#E07A5F;strokeWidth=1;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-31" target="Uscz21SQ1si1RZ5pgYw--6" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-31" value="class Condition : noncopyable" style="swimlane;fontStyle=0;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="566" y="262" width="261" height="116" as="geometry">
            <mxRectangle x="550" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-32" value="  private:&#xa;    MutexLock&amp;     mutex;&#xa;    pthread_cond_t cond;" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;" parent="KjH-scwqGW-Tt5N11Xai-31" vertex="1">
          <mxGeometry y="26" width="261" height="86" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-33" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;strokeWidth=1;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-32" target="KjH-scwqGW-Tt5N11Xai-23" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-36" value="class Thread : noncopyable " style="swimlane;fontStyle=2;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="643" y="2411" width="494" height="1087" as="geometry">
            <mxRectangle x="230" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-37" value="  private:&#xa;    void           setDefaultName();&#xa;    bool           started_;&#xa;    bool           joined_;&#xa;    pthread_t      pthreadId_;&#xa;    pid_t          tid_;&#xa;    ThreadFunc     func_;&#xa;    std::string    name_;&#xa;    CountDownLatch latch_;" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=none;" parent="KjH-scwqGW-Tt5N11Xai-36" vertex="1">
          <mxGeometry y="26" width="494" height="166" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-38" value="Thread::Thread(const ThreadFunc&amp; func, const string&amp; n)&#xa;    : started_(false), joined_(false), pthreadId_(0), tid_(0), func_(func),&#xa;      name_(n), latch_(1)&#xa;{&#xa;    setDefaultName();&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-36" vertex="1">
          <mxGeometry y="192" width="494" height="106" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-39" value="void Thread::setDefaultName()&#xa;{&#xa;    if (name_.empty()) {&#xa;        char buf[32];&#xa;        snprintf(buf, sizeof buf, &quot;Thread&quot;);&#xa;        name_ = buf;&#xa;    }&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-36" vertex="1">
          <mxGeometry y="298" width="494" height="125" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-50" value="struct ThreadData&#xa;{&#xa;    typedef Thread::ThreadFunc ThreadFunc;&#xa;    ThreadFunc                 func_;&#xa;    string                     name_;&#xa;    pid_t*                     tid_;&#xa;    CountDownLatch*            latch_;&#xa;    ThreadData(const ThreadFunc&amp; func,&#xa;               const string&amp;     name,&#xa;               pid_t*            tid,&#xa;               CountDownLatch*   latch)&#xa;        : func_(func), name_(name), tid_(tid), latch_(latch)&#xa;    {&#xa;    }&#xa;    void runInThread()&#xa;    {&#xa;        *tid_ = CurrentThread::tid();&#xa;        tid_  = NULL;&#xa;        latch_-&gt;countDown();&#xa;        latch_ = NULL;&#xa;        CurrentThread::t_threadName = name_.empty() ? &quot;Thread&quot; : name_.c_str();&#xa;        prctl(PR_SET_NAME, CurrentThread::t_threadName);&#xa;        func_();&#xa;        CurrentThread::t_threadName = &quot;finished&quot;;&#xa;    }&#xa;};" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-36" vertex="1">
          <mxGeometry y="423" width="494" height="379" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-53" value="void Thread::start()&#xa;{&#xa;    assert(!started_);  // true，其实就是判断下目前状态是未启动&#xa;    started_         = true;  //更新线程状态&#xa;    ThreadData* data = new ThreadData(func_, name_, &amp;tid_, &amp;latch_);&#xa;    // name_ == &quot;EventLoopThread&quot;&#xa;    // func_ == bind(&amp;EventLoopThread::threadFunc, this)&#xa;    if (pthread_create(&amp;pthreadId_, NULL, &amp;startThread, data)) {&#xa;        //创建线程，如果创建线程失败进入这个if分支&#xa;        started_ = false;&#xa;        delete data;&#xa;    }&#xa;    else {&#xa;        latch_.wait();&#xa;        assert(tid_ &gt; 0);&#xa;    }&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-36" vertex="1">
          <mxGeometry y="802" width="494" height="259" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-40" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;strokeWidth=1;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-37" target="KjH-scwqGW-Tt5N11Xai-23" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-41" value="class CountDownLatch : noncopyable " style="swimlane;fontStyle=2;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1236" y="1999" width="292" height="246" as="geometry">
            <mxRectangle x="230" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-42" value="  private:&#xa;    mutable MutexLock mutex_;&#xa;    Condition         condition_;&#xa;    int               count_;" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=none;" parent="KjH-scwqGW-Tt5N11Xai-41" vertex="1">
          <mxGeometry y="26" width="292" height="86" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-43" value="CountDownLatch::CountDownLatch(int count)&#xa;    : mutex_(), condition_(mutex_), count_(count) {}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-41" vertex="1">
          <mxGeometry y="112" width="292" height="59" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-51" value="void CountDownLatch::wait() {&#xa;  MutexLockGuard lock(mutex_);&#xa;  while (count_ &gt; 0) condition_.wait();&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-41" vertex="1">
          <mxGeometry y="171" width="292" height="75" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-45" value="" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#393C56;strokeColor=#E07A5F;strokeWidth=1;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-42" target="KjH-scwqGW-Tt5N11Xai-37" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-49" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;strokeWidth=1;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-47" target="KjH-scwqGW-Tt5N11Xai-46" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="660" y="687" />
              <mxPoint x="660" y="1292" />
              <mxPoint x="615" y="1292" />
              <mxPoint x="615" y="1993" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-47" value="class MutexLockGuard : noncopyable " style="swimlane;fontStyle=0;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="580" y="600" width="241" height="72" as="geometry">
            <mxRectangle x="550" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-48" value="  private:&#xa;    MutexLock&amp; mutex;" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;" parent="KjH-scwqGW-Tt5N11Xai-47" vertex="1">
          <mxGeometry y="26" width="241" height="42" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-57" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="Uscz21SQ1si1RZ5pgYw--22" target="Uscz21SQ1si1RZ5pgYw--14" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2879" y="615" />
              <mxPoint x="2879" y="247" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-60" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="Uscz21SQ1si1RZ5pgYw--17" target="Uscz21SQ1si1RZ5pgYw--11" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-61" value="Main.cpp" style="swimlane;fontStyle=2;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="44" y="-3112" width="427" height="811" as="geometry">
            <mxRectangle x="230" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-63" value="int main(int argc, char* argv[])&#xa;{&#xa;..." style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-61" vertex="1">
          <mxGeometry y="26" width="427" height="53" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-65" value="    EventLoop mainLoop;" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-61" vertex="1">
          <mxGeometry y="79" width="427" height="29" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-81" value="    Server myHTTPServer(&amp;mainLoop, threadNum, port);" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-61" vertex="1">
          <mxGeometry y="108" width="427" height="642" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-116" value="    myHTTPServer.start();" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-61" vertex="1">
          <mxGeometry y="750" width="427" height="29" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-117" value="    mainLoop.loop();" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-61" vertex="1">
          <mxGeometry y="779" width="427" height="29" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-66" value="class EventLoop" style="swimlane;fontStyle=2;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="648" y="-3188" width="428" height="325" as="geometry">
            <mxRectangle x="230" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-67" value="EventLoop::EventLoop()&#xa;    : looping_(false), poller_(new Epoll()), wakeupFd_(createEventfd()),&#xa;      quit_(false), eventHandling_(false), callingPendingFunctors_(false),&#xa;      threadId_(CurrentThread::tid()),&#xa;      pwakeupChannel_(new Channel(this, wakeupFd_))&#xa;{&#xa;    if (t_loopInThisThread) {&#xa;        // LOG &lt;&lt; &quot;Another EventLoop &quot; &lt;&lt; t_loopInThisThread &lt;&lt; &quot; exists in this&#xa;        // thread &quot; &lt;&lt; threadId_;&#xa;    }&#xa;    else {&#xa;        t_loopInThisThread = this;&#xa;    }&#xa;    // pwakeupChannel_-&gt;setEvents(EPOLLIN | EPOLLET | EPOLLONESHOT);&#xa;    pwakeupChannel_-&gt;setEvents(EPOLLIN | EPOLLET);&#xa;    pwakeupChannel_-&gt;setReadHandler(bind(&amp;EventLoop::handleRead, this));&#xa;    pwakeupChannel_-&gt;setConnHandler(bind(&amp;EventLoop::handleConn, this));&#xa;    poller_-&gt;epoll_add(pwakeupChannel_, 0);&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=none;" parent="KjH-scwqGW-Tt5N11Xai-66" vertex="1">
          <mxGeometry y="26" width="428" height="287" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-70" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-65" target="KjH-scwqGW-Tt5N11Xai-67" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-71" value="class Epoll" style="swimlane;fontStyle=0;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1218" y="-3199" width="483" height="98" as="geometry">
            <mxRectangle x="550" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-73" value="Epoll::Epoll() : epollFd_(epoll_create1(EPOLL_CLOEXEC)), events_(EVENTSNUM)&#xa;{&#xa;    assert(epollFd_ &gt; 0);&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=none;" parent="KjH-scwqGW-Tt5N11Xai-71" vertex="1">
          <mxGeometry y="26" width="483" height="70" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-74" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-67" target="KjH-scwqGW-Tt5N11Xai-73" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-100" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontColor=#393C56;labelBackgroundColor=#F4F1DE;" parent="KjH-scwqGW-Tt5N11Xai-74" vertex="1" connectable="0">
          <mxGeometry x="0.5691" y="2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-76" value="class Channel" style="swimlane;fontStyle=0;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1218" y="-3044" width="295" height="109" as="geometry">
            <mxRectangle x="550" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-78" value="Channel::Channel(EventLoop* loop, int fd)&#xa;    : loop_(loop), fd_(fd), events_(0), lastEvents_(0)&#xa;{&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;" parent="KjH-scwqGW-Tt5N11Xai-76" vertex="1">
          <mxGeometry y="26" width="295" height="83" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-80" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-67" target="KjH-scwqGW-Tt5N11Xai-78" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-101" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontColor=#393C56;labelBackgroundColor=#F4F1DE;" parent="KjH-scwqGW-Tt5N11Xai-80" vertex="1" connectable="0">
          <mxGeometry x="0.477" y="4" relative="1" as="geometry">
            <mxPoint x="-1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-86" value="class Server" style="swimlane;fontStyle=2;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="648" y="-2839" width="497" height="574" as="geometry">
            <mxRectangle x="230" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-114" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="KjH-scwqGW-Tt5N11Xai-86" source="KjH-scwqGW-Tt5N11Xai-88" target="KjH-scwqGW-Tt5N11Xai-112" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-115" value="5" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontColor=#393C56;labelBackgroundColor=#F4F1DE;" parent="KjH-scwqGW-Tt5N11Xai-114" vertex="1" connectable="0">
          <mxGeometry x="0.1152" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-88" value="Server::Server(EventLoop* loop, int threadNum, int port)&#xa;    : loop_(loop), threadNum_(threadNum), port_(port),&#xa;      eventLoopThreadPool_(new EventLoopThreadPool(loop_, threadNum)),&#xa;      started_(false), acceptChannel_(new Channel(loop_)),&#xa;      listenFd_(socket_bind_listen(port_))&#xa;{&#xa;    acceptChannel_-&gt;setFd(listenFd_);  //莫名其妙为啥不放到构造函数一起操作呢？&#xa;    handle_for_sigpipe();&#xa;    if (setSocketNonBlocking(listenFd_) &lt; 0) {&#xa;        perror(&quot;set socket non block failed&quot;);&#xa;        abort();&#xa;    }&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=none;" parent="KjH-scwqGW-Tt5N11Xai-86" vertex="1">
          <mxGeometry y="26" width="497" height="199" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-112" value="void handle_for_sigpipe()&#xa;{&#xa;    struct sigaction sa;&#xa;    memset(&amp;sa, &#39;\0&#39;, sizeof(sa));&#xa;    sa.sa_handler = SIG_IGN;&#xa;    // SIG_IGN忽略SIGPIPE;SIGPIPE发生在：写一个没有读的管道，默认动作是终止程序。&#xa;    sa.sa_flags = 0;&#xa;    if (sigaction(SIGPIPE, &amp;sa, NULL))&#xa;        return;&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-86" vertex="1">
          <mxGeometry y="225" width="497" height="156" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-133" value="void Server::start()&#xa;{&#xa;    eventLoopThreadPool_-&gt;start();&#xa;    // acceptChannel_-&gt;setEvents(EPOLLIN | EPOLLET | EPOLLONESHOT);&#xa;    acceptChannel_-&gt;setEvents(EPOLLIN | EPOLLET);  //可读事件 | ET模式&#xa;    acceptChannel_-&gt;setReadHandler(bind(&amp;Server::handNewConn, this));&#xa;    //接受client socket&#xa;    acceptChannel_-&gt;setConnHandler(bind(&amp;Server::handThisConn, this));&#xa;    //&#xa;    loop_-&gt;addToPoller(acceptChannel_, 0);&#xa;    started_ = true;&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-86" vertex="1">
          <mxGeometry y="381" width="497" height="193" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-90" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-81" target="KjH-scwqGW-Tt5N11Xai-88" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-94" value="class EventLoopThreadPool : noncopyable" style="swimlane;fontStyle=2;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1218" y="-2894" width="501" height="357" as="geometry">
            <mxRectangle x="230" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-96" value="EventLoopThreadPool::EventLoopThreadPool(EventLoop* baseLoop, int numThreads)&#xa;    : baseLoop_(baseLoop), started_(false), numThreads_(numThreads), next_(0)&#xa;{&#xa;    if (numThreads_ &lt;= 0) {&#xa;        LOG &lt;&lt; &quot;numThreads_ &lt;= 0&quot;;&#xa;        abort();  //中止程序执行，直接从调用的地方跳出。&#xa;    }&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=none;" parent="KjH-scwqGW-Tt5N11Xai-94" vertex="1">
          <mxGeometry y="26" width="501" height="136" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-135" value="void EventLoopThreadPool::start()&#xa;{&#xa;    baseLoop_-&gt;assertInLoopThread();&#xa;    //只是判断当前的保存的threadId_是否和线程ID一致&#xa;    started_ = true;&#xa;    for (int i = 0; i &lt; numThreads_; ++i) {  // numThreads_ == 10&#xa;        std::shared_ptr&lt;EventLoopThread&gt; t(new EventLoopThread());  //新建线程&#xa;        threads_.push_back(t);&#xa;        loops_.push_back(t-&gt;startLoop());  // 10个线程都卡在这里了&#xa;    }&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-94" vertex="1">
          <mxGeometry y="162" width="501" height="174" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-98" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-88" target="KjH-scwqGW-Tt5N11Xai-96" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-103" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontColor=#393C56;labelBackgroundColor=#F4F1DE;" parent="KjH-scwqGW-Tt5N11Xai-98" vertex="1" connectable="0">
          <mxGeometry x="0.2818" y="-5" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-99" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=1.01;entryY=0.833;entryDx=0;entryDy=0;entryPerimeter=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-88" target="KjH-scwqGW-Tt5N11Xai-67" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1170" y="-2714" />
              <mxPoint x="1170" y="-2923" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-106" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontColor=#393C56;labelBackgroundColor=#F4F1DE;" parent="KjH-scwqGW-Tt5N11Xai-99" vertex="1" connectable="0">
          <mxGeometry x="0.6745" y="2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-104" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-88" target="KjH-scwqGW-Tt5N11Xai-78" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1170" y="-2714" />
              <mxPoint x="1170" y="-2976" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-105" value="3" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontColor=#393C56;labelBackgroundColor=#F4F1DE;" parent="KjH-scwqGW-Tt5N11Xai-104" vertex="1" connectable="0">
          <mxGeometry x="0.5424" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-108" value="Util.cpp" style="swimlane;fontStyle=2;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1898" y="-2894" width="510" height="584" as="geometry">
            <mxRectangle x="230" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-109" value="int socket_bind_listen(int port)&#xa;{&#xa;    // 检查port值，取正确区间范围&#xa;    if (port &lt; 0 || port &gt; 65535)&#xa;        return -1;&#xa;    // 创建socket(IPv4 + TCP)，返回监听描述符&#xa;    int listen_fd = 0;&#xa;    if ((listen_fd = socket(AF_INET, SOCK_STREAM, 0)) == -1)&#xa;        return -1;&#xa;    // 消除bind时&quot;Address already in use&quot;错误&#xa;    int optval = 1;&#xa;    if (setsockopt(listen_fd, SOL_SOCKET, SO_REUSEADDR, &amp;optval,&#xa;                   sizeof(optval)) == -1) {&#xa;        close(listen_fd);&#xa;        return -1;&#xa;    }&#xa;    // 设置服务器IP和Port，和监听描述符绑定&#xa;    struct sockaddr_in server_addr;&#xa;    bzero((char*)&amp;server_addr, sizeof(server_addr));&#xa;    server_addr.sin_family      = AF_INET;&#xa;    server_addr.sin_addr.s_addr = htonl(INADDR_ANY);&#xa;    server_addr.sin_port        = htons((unsigned short)port);&#xa;    if (bind(listen_fd, (struct sockaddr*)&amp;server_addr, sizeof(server_addr)) ==&#xa;        -1) {&#xa;        close(listen_fd);&#xa;        return -1;&#xa;    }&#xa;    // 开始监听，最大等待队列长为LISTENQ&#xa;    if (listen(listen_fd, 2048) == -1) {&#xa;        close(listen_fd);&#xa;        return -1;&#xa;    }&#xa;    // 无效监听描述符&#xa;    if (listen_fd == -1) {&#xa;        close(listen_fd);&#xa;        return -1;&#xa;    }&#xa;    return listen_fd;&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=none;" parent="KjH-scwqGW-Tt5N11Xai-108" vertex="1">
          <mxGeometry y="26" width="510" height="558" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-110" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-88" target="KjH-scwqGW-Tt5N11Xai-108" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1175" y="-2714" />
              <mxPoint x="1175" y="-2437" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-111" value="4" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontColor=#393C56;labelBackgroundColor=#F4F1DE;" parent="KjH-scwqGW-Tt5N11Xai-110" vertex="1" connectable="0">
          <mxGeometry x="-0.3171" y="2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-134" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#E07A5F;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-116" target="KjH-scwqGW-Tt5N11Xai-133" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-136" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;fontColor=#393C56;strokeColor=#00FFFF;fillColor=#F2CC8F;labelBackgroundColor=#F4F1DE;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-133" target="KjH-scwqGW-Tt5N11Xai-135" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1198" y="-2361" />
              <mxPoint x="1198" y="-2645" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-137" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontColor=#393C56;labelBackgroundColor=#F4F1DE;" parent="KjH-scwqGW-Tt5N11Xai-136" vertex="1" connectable="0">
          <mxGeometry x="-0.5303" y="-4" relative="1" as="geometry">
            <mxPoint x="-29" y="2" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-163" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=1;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#00FFFF;fillColor=#F2CC8F;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-138" target="KjH-scwqGW-Tt5N11Xai-148" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1730" y="-2032" />
              <mxPoint x="1730" y="-1724" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-138" value="class EventLoopThread : noncopyable" style="swimlane;fontStyle=2;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1214" y="-2364" width="464" height="332" as="geometry">
            <mxRectangle x="230" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-139" value="EventLoopThread::EventLoopThread()&#xa;    : loop_(NULL), exiting_(false),&#xa;      thread_(bind(&amp;EventLoopThread::threadFunc, this), &quot;EventLoopThread&quot;),&#xa;      mutex_(), cond_(mutex_)&#xa;{&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=none;" parent="KjH-scwqGW-Tt5N11Xai-138" vertex="1">
          <mxGeometry y="26" width="464" height="106" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-157" value="EventLoop* EventLoopThread::startLoop()&#xa;{&#xa;    assert(!thread_.started());  // true&#xa;    thread_.start();             //应该是这里就被阻塞了？&#xa;    {&#xa;        MutexLockGuard lock(mutex_);&#xa;        // 一直等到threadFun在Thread里真正跑起来&#xa;        while (loop_ == NULL)&#xa;            //默认情况会进入这个if分支，也就是说会进入阻塞状态并释放lock&#xa;            cond_.wait();&#xa;    }&#xa;    return loop_;&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=default;" parent="KjH-scwqGW-Tt5N11Xai-138" vertex="1">
          <mxGeometry y="132" width="464" height="197" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-143" value="class Thread : noncopyable " style="swimlane;fontStyle=2;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1214" y="-1986" width="505" height="878" as="geometry">
            <mxRectangle x="230" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-145" value="Thread::Thread(const ThreadFunc&amp; func, const string&amp; n)&#xa;    : started_(false), joined_(false), pthreadId_(0), tid_(0), func_(func),&#xa;      name_(n), latch_(1)&#xa;{&#xa;    setDefaultName();&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-143" vertex="1">
          <mxGeometry y="26" width="505" height="106" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-148" value="void Thread::start()&#xa;{&#xa;    assert(!started_);  // true，其实就是判断下目前状态是未启动&#xa;    started_         = true;  //更新线程状态&#xa;    ThreadData* data = new ThreadData(func_, name_, &amp;tid_, &amp;latch_);&#xa;    // name_ == &quot;EventLoopThread&quot;&#xa;    // func_ == bind(&amp;EventLoopThread::threadFunc, this)&#xa;    if (pthread_create(&amp;pthreadId_, NULL, &amp;startThread, data)) {&#xa;        //创建线程，如果创建线程失败进入这个if分支&#xa;        started_ = false;&#xa;        delete data;&#xa;    }&#xa;    else {&#xa;        latch_.wait();&#xa;        assert(tid_ &gt; 0);&#xa;    }&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-143" vertex="1">
          <mxGeometry y="132" width="505" height="259" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-164" value="void* startThread(void* obj)&#xa;{&#xa;    ThreadData* data = static_cast&lt;ThreadData*&gt;(obj);&#xa;    data-&gt;runInThread();&#xa;    delete data;&#xa;    return NULL;&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-143" vertex="1">
          <mxGeometry y="391" width="505" height="114" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-165" value="struct ThreadData&#xa;{&#xa;    typedef Thread::ThreadFunc ThreadFunc;&#xa;    ThreadFunc                 func_;&#xa;    string                     name_;&#xa;    pid_t*                     tid_;&#xa;    CountDownLatch*            latch_;&#xa;    ThreadData(const ThreadFunc&amp; func,&#xa;               const string&amp;     name,&#xa;               pid_t*            tid,&#xa;               CountDownLatch*   latch)&#xa;        : func_(func), name_(name), tid_(tid), latch_(latch)&#xa;    {&#xa;    }&#xa;    void runInThread()&#xa;    {&#xa;        *tid_ = CurrentThread::tid();&#xa;        tid_  = NULL;&#xa;        latch_-&gt;countDown();&#xa;        latch_ = NULL;&#xa;        CurrentThread::t_threadName = name_.empty() ? &quot;Thread&quot; : name_.c_str();&#xa;        prctl(PR_SET_NAME, CurrentThread::t_threadName);&#xa;        func_();&#xa;        CurrentThread::t_threadName = &quot;finished&quot;;&#xa;    }&#xa;};" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-143" vertex="1">
          <mxGeometry y="505" width="505" height="373" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-151" value="class HttpData : public std::enable_shared_from_this&lt;HttpData&gt;" style="swimlane;fontStyle=0;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1792" y="-2090" width="499" height="275" as="geometry">
            <mxRectangle x="550" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-153" value="HttpData::HttpData(EventLoop* loop, int connfd)&#xa;    : loop_(loop), fd_(connfd), channel_(new Channel(loop, connfd)),&#xa;      error_(false), connectionState_(H_CONNECTED), method_(METHOD_GET),&#xa;      HTTPVersion_(HTTP_11), nowReadPos_(0), state_(STATE_PARSE_URI),&#xa;      hState_(H_START), keepAlive_(false)&#xa;{&#xa;    // loop_-&gt;queueInLoop(bind(&amp;HttpData::setHandlers, this));&#xa;    channel_-&gt;setReadHandler(bind(&amp;HttpData::handleRead, this));&#xa;    channel_-&gt;setWriteHandler(bind(&amp;HttpData::handleWrite, this));&#xa;    channel_-&gt;setConnHandler(bind(&amp;HttpData::handleConn, this));&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=#E07A5F;" parent="KjH-scwqGW-Tt5N11Xai-151" vertex="1">
          <mxGeometry y="26" width="499" height="175" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-154" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#00FFFF;fillColor=#F2CC8F;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-135" target="KjH-scwqGW-Tt5N11Xai-139" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-159" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontColor=#393C56;" parent="KjH-scwqGW-Tt5N11Xai-154" vertex="1" connectable="0">
          <mxGeometry x="0.0863" y="4" relative="1" as="geometry">
            <mxPoint x="-10" y="78" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-155" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#00FFFF;fillColor=#F2CC8F;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-139" target="KjH-scwqGW-Tt5N11Xai-145" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1131" y="-2285" />
              <mxPoint x="1131" y="-1907" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-158" style="edgeStyle=orthogonalEdgeStyle;curved=0;rounded=1;sketch=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fontColor=#393C56;strokeColor=#00FFFF;fillColor=#F2CC8F;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-135" target="KjH-scwqGW-Tt5N11Xai-157" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1770" y="-2645" />
              <mxPoint x="1770" y="-2134" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="KjH-scwqGW-Tt5N11Xai-160" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontColor=#393C56;" parent="KjH-scwqGW-Tt5N11Xai-158" vertex="1" connectable="0">
          <mxGeometry x="0.0929" y="3" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="DDp0w34CXhIu31KfOlfU-8" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;strokeColor=#00FFFF;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="DDp0w34CXhIu31KfOlfU-0" target="DDp0w34CXhIu31KfOlfU-6">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="DDp0w34CXhIu31KfOlfU-0" value="class EventLoopThread : noncopyable" style="swimlane;fontStyle=2;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="1793" y="-1656" width="434" height="325" as="geometry">
            <mxRectangle x="230" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="DDp0w34CXhIu31KfOlfU-1" value="void EventLoopThread::threadFunc()&#xa;{&#xa;    EventLoop loop;&#xa;    // printf(&quot;this is eltp39\n&quot;);&#xa;    {&#xa;        MutexLockGuard lock(mutex_);  //锁定目前这个线程&#xa;        loop_ = &amp;loop;&#xa;        cond_.notify();  //条件变量解锁lock&#xa;        // printf(&quot;this is looping_.threadId_:%d\n&quot;, loop_.threadId_);&#xa;    }&#xa;    loop.loop();  //这才是真正的阻塞点&#xa;    // assert(exiting_);&#xa;    loop_ = NULL;&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=none;" vertex="1" parent="DDp0w34CXhIu31KfOlfU-0">
          <mxGeometry y="26" width="434" height="205" as="geometry" />
        </mxCell>
        <mxCell id="DDp0w34CXhIu31KfOlfU-5" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;strokeColor=#00FFFF;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="KjH-scwqGW-Tt5N11Xai-165" target="DDp0w34CXhIu31KfOlfU-1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="DDp0w34CXhIu31KfOlfU-6" value="class EventLoop" style="swimlane;fontStyle=2;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="1792" y="-1280" width="445" height="350" as="geometry">
            <mxRectangle x="230" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="DDp0w34CXhIu31KfOlfU-7" value="void EventLoop::loop()&#xa;{&#xa;    // printf(&quot;this is looping_:%d\n&quot;, looping_);&#xa;    assert(!looping_);  // false&#xa;    assert(isInLoopThread());&#xa;    looping_ = true;&#xa;    quit_    = false;&#xa;    // LOG_TRACE &lt;&lt; &quot;EventLoop &quot; &lt;&lt; this &lt;&lt; &quot; start looping&quot;;&#xa;    std::vector&lt;SP_Channel&gt; ret;&#xa;    while (!quit_) {&#xa;        // cout &lt;&lt; &quot;doing&quot; &lt;&lt; endl;&#xa;        ret.clear();&#xa;        ret            = poller_-&gt;poll();&#xa;        eventHandling_ = true;&#xa;        for (auto&amp; it : ret)&#xa;            it-&gt;handleEvents();&#xa;        eventHandling_ = false;&#xa;        doPendingFunctors();&#xa;        poller_-&gt;handleExpired();&#xa;    }&#xa;    looping_ = false;&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=none;" vertex="1" parent="DDp0w34CXhIu31KfOlfU-6">
          <mxGeometry y="26" width="445" height="324" as="geometry" />
        </mxCell>
        <mxCell id="DDp0w34CXhIu31KfOlfU-9" value="class Epoll" style="swimlane;fontStyle=0;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=0;shadow=0;strokeWidth=1;fillColor=#F2CC8F;strokeColor=#E07A5F;fontColor=#393C56;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="2301" y="-1331" width="481" height="262" as="geometry">
            <mxRectangle x="550" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="DDp0w34CXhIu31KfOlfU-10" value="std::vector&lt;SP_Channel&gt; Epoll::poll()&#xa;{&#xa;    while (true) {&#xa;        // printf(&quot;this is events_.size():%d\n&quot;, events_[0]);&#xa;        // printf(&quot;this is events_.capacity():%d\n&quot;, events_.capacity());&#xa;        int event_count = epoll_wait(epollFd_, &amp;*events_.begin(),&#xa;                                     events_.size(), EPOLLWAIT_TIME);&#xa;        if (event_count &lt; 0) {  // epoll_wait报错&#xa;            perror(&quot;epoll wait error&quot;);&#xa;        }&#xa;        std::vector&lt;SP_Channel&gt; req_data = getEventsRequest(event_count);&#xa;        if (req_data.size() &gt; 0) {&#xa;            return req_data;&#xa;        }&#xa;    }&#xa;}" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#393C56;strokeColor=none;" vertex="1" parent="DDp0w34CXhIu31KfOlfU-9">
          <mxGeometry y="26" width="481" height="236" as="geometry" />
        </mxCell>
        <mxCell id="DDp0w34CXhIu31KfOlfU-11" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;strokeColor=#00FFFF;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="DDp0w34CXhIu31KfOlfU-7" target="DDp0w34CXhIu31KfOlfU-10">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
